{"version":3,"sources":["images/portfolio-logo-2.svg","images/hcon-summary.png","images/typeee-summary.png","images/react-guess-summary.png","images/react-calculator-summary.png","images/react-name-summary.png","components/WorkModal.js","components/WorkCard.js","texts/text.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","maxWidth","textAlign","color","outline","padding","title","fontSize","fontFamily","flex","content","image","width","breakpoints","down","closeButton","explain","fontWeight","chip","margin","spacing","WorkModal","props","classes","open","handleClose","summaryContent","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","disableEnforceFocus","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","Typography","workTitle","Button","marginright","onClick","size","Grid","container","item","sm","xs","src","summaryImage","alt","workExplain","chipData","map","data","index","Chip","key","label","char1","char2","char3","marginTop","href","demoUrl","variant","target","rel","githubUrl","WorkCard","useState","setOpen","paperMargin","setPaperMargin","boxShadow","Paper","component","onMouseOver","onMouseOut","workContents","image1","image2","image3","image4","image5","logo","Home","Tooltip","placement","style","createMuiTheme","palette","primary","main","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a95db40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolio-logo-2.b1c3fdb1.svg\";","module.exports = __webpack_public_path__ + \"static/media/hcon-summary.312084b0.png\";","module.exports = __webpack_public_path__ + \"static/media/typeee-summary.c71a343e.png\";","module.exports = __webpack_public_path__ + \"static/media/react-guess-summary.550657b9.png\";","module.exports = __webpack_public_path__ + \"static/media/react-calculator-summary.f26a4b99.png\";","module.exports = __webpack_public_path__ + \"static/media/react-name-summary.c9b7c8c5.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n//material-ui\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\n//icons\nimport CloseIcon from '@material-ui/icons/Close';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    \n  },\n  paper: {\n    backgroundColor: \"rgb(40, 44, 52, 0.9)\",\n    maxWidth: \"80%\",\n    textAlign: \"center\",\n    color: \"#fff\",\n    outline: 'none',\n    padding:\"10px\"\n  },\n  title:{\n    fontSize: \"30px\",\n    fontFamily: \"arial black\",\n    display: \"inline\",\n    flex: 1,\n  },\n  content:{\n    fontSize: \"16px\",\n  },\n  image:{\n    width: \"90%\",\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n\n    },\n  },\n  closeButton:{\n    fontSize: \"35px\",\n    color: \"#fff\"\n  },\n  explain:{\n    fontSize: \"18px\",\n    fontWeight: \"bold\"\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nexport default function WorkModal(props) {\n  const classes = useStyles();\n  const open = props.open;\n  const handleClose = props.handleClose;\n  const summaryContent = props.summaryContent;\n\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        disableEnforceFocus\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Box display=\"flex\" textAlign=\"center\">\n              <Typography className={classes.title}>{summaryContent.workTitle}</Typography>\n              <Button marginright=\"8px\" onClick={handleClose}>\n                <CloseIcon className={classes.closeButton} />\n              </Button>\n            </Box>\n            \n            <hr size=\"2\" ></hr>\n            <Grid container spacing={1}>\n              <Grid item sm={6} xs={12}>\n              <img \n                src={summaryContent.summaryImage}\n                alt=\"summary\"\n                className={classes.image}\n                />\n              </Grid>\n              <Grid item sm={6} xs={12}>\n                <Box textAlign=\"left\">\n                <Typography className={classes.explain}>\n                    {summaryContent.workExplain}\n                  </Typography>\n                  <br />\n                  <br />\n                  {summaryContent.chipData.map((data,index) => {\n                    return (\n                      <Chip\n                        key={index}\n                        label={data}\n                        className={classes.chip}\n                      />\n                    );\n                  })}\n                  <br />        \n                  <br />\n                  {\n                    summaryContent.char1 === \"\" ? (\n                      null\n                    ) : (\n                  <Typography className={classes.content}>\n                    ・　{summaryContent.char1}\n                  </Typography>\n                    )\n                  }     \n                  {\n                    summaryContent.char2 === \"\" ? (\n                      null\n                    ) : (\n                  <Typography className={classes.content}>\n                    ・　{summaryContent.char2}\n                  </Typography>\n                    )\n                  }\n                  {\n                    summaryContent.char3 === \"\" ? (\n                      null\n                    ) : (\n                  <Typography className={classes.content}>\n                    ・　{summaryContent.char3}\n                  </Typography>\n                    )\n                  }     \n                </Box>\n                <Box marginTop=\"40px\">\n                <Grid container spacing={1} >\n                  <Grid item sm={6} xs={12}>\n                    <Box>\n                      <Button \n                      href={summaryContent.demoUrl}\n                      size=\"large\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      >\n                        <LanguageIcon />\n                        {`　デモを見る`}\n                      </Button>\n                    </Box>\n                  </Grid>\n                  <Grid item sm={6} xs={12}>\n                    <Box>\n                      <Button \n                      href={summaryContent.githubUrl}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      >\n                        <GitHubIcon />\n                        {`　ソースコードを見る`}\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n                </Box>\n              </Grid>\n            </Grid>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport WorkModal from './WorkModal'\n\n\n\n//material-ui\n\nfunction WorkCard(props) {\n    const [open, setOpen] = useState(false);\n    const [paperMargin, setPaperMargin] = useState('10px');\n    const summaryContent = props.summaryContent;\n\n    const useStyles = makeStyles(() => ({\n        paper:{\n            boxShadow: \"2px 2px 6px #62DAFB\",\n            margin: paperMargin\n        },\n        image:{\n            width: \"100%\",\n        },\n        workTitle:{\n            fontSize:\"20px\",\n            fontFamily: \"arial black\",\n        \n        }\n    }));\n    const classes = useStyles();\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleMouseOver = () => {\n        setPaperMargin('5px')\n    }\n\n    const handleMouseOut = () => {\n        setPaperMargin('10px')\n    }\n\n    return (\n        <div>\n            <Paper \n            className={classes.paper} \n            component={Button} \n            onClick={handleOpen} \n            onMouseOver={handleMouseOver}\n            onMouseOut={handleMouseOut}\n            >\n                <img \n                src={summaryContent.summaryImage}\n                alt=\"summary\"\n                className={classes.image}\n                />\n            </Paper>\n            <Typography className={classes.workTitle}>{summaryContent.workTitle}</Typography>\n            <WorkModal\n            open={open}\n            handleClose={handleClose}\n            summaryContent={summaryContent}\n            />\n        </div>\n    )\n}\n\nexport default WorkCard;","import image1 from '../images/hcon-summary.png';\nimport image2 from '../images/typeee-summary.png';\nimport image3 from '../images/react-guess-summary.png';\nimport image4 from '../images/react-calculator-summary.png';\nimport image5 from '../images/react-name-summary.png';\n\nexport const workContents = [\n    {\n        workTitle: \"Hcon\",\n        summaryImage: image1,\n        workExplain: \"ルービックキューブ目隠し競技用の大会サイト\",\n        demoUrl: \"https://hcon-3bld.web.app/\",\n        githubUrl:\"https://github.com/shintaro-hirose/hcon_client\",\n        char1:\"Firebase Authentication によるログイン機能\",\n        char2:\"cron job による定時更新\",\n        char3:\"React によるSPA、レスポンシブデザイン\",\n        chipData: [\"React.js\", \"Material-UI\", \"Redux\", \"node.js\", \"Firebase\", \"Cloud Function\"]\n    },\n    {\n        workTitle: \"typeee!\",\n        summaryImage: image2,\n        workExplain: \"英単語タイピング速度計測サイト\",\n        demoUrl: \"https://shintaro-hirose.github.io/typeee/\",\n        githubUrl:\"https://github.com/shintaro-hirose/typeee\",\n        char1:\"タイム、タイピング速度のリアルタイム表示\",\n        char2:\"React Hooksを用いたstateの管理\",\n        char3:\"\",\n        chipData: [\"React.js\", \"Material-UI\", \"Github Pages\"]\n\n    },\n    {\n        workTitle: \"React Number Guess\",\n        summaryImage: image3,\n        workExplain: \"ランダムに生成された数字を当てるゲーム\",\n        demoUrl: \"https://shintaro-hirose.github.io/react-number-guess/\",\n        githubUrl:\"https://github.com/shintaro-hirose/react-number-guess\",\n        char1:\"React Hooksを用いたstateの管理\",\n        char2:\"\",\n        char3:\"\",\n        chipData: [\"React.js\", \"Material-UI\", \"Github Pages\"]\n\n    },\n    {\n        workTitle: \"React Calculator\",\n        summaryImage: image4,\n        workExplain: \"四則演算、マイナス掛け、パーセント表示ができる簡易電卓\",\n        demoUrl: \"https://shintaro-hirose.github.io/react-calculator/\",\n        githubUrl:\"https://github.com/shintaro-hirose/react-calculator\",\n        char1:\"React Hooksを用いたstateの管理\",\n        char2:\"\",\n        char3:\"\",\n        chipData: [\"React.js\", \"Material-UI\", \"Github Pages\"]\n\n    },\n    {\n        workTitle: \"ランダム名前生成くん\",\n        summaryImage: image5,\n        workExplain: \"独立行政法人情報処理推進機構(IPA)のMJ文字情報APIを使用して、人名に使われる漢字二字を生成します\",\n        demoUrl: \"https://shintaro-hirose.github.io/react-name-generator/\",\n        githubUrl:\"https://github.com/shintaro-hirose/react-name-generator\",\n        char1:\"axiosのHTTPリクエストによるAPIの使用\",\n        char2:\"\",\n        char3:\"\",\n        chipData: [\"React.js\", \"Material-UI\", \"axios\" ,\"Github Pages\"]\n\n    },\n]","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n//images\nimport logo from '../images/portfolio-logo-2.svg';\n\n//material-ui\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\n//components\nimport WorkCard from '../components/WorkCard'\n\n//work texts\nimport {workContents} from '../texts/text'\n\nconst useStyles = makeStyles(() => ({\n    logo:{\n        width: \"250px\",\n    },\n    title:{\n        fontSize: \"30px\",\n        fontWeight: \"bold\",\n        fontFamily: \"arial black\",\n        marginTop:\"40px\"\n    },\n    container:{\n        maxWidth: \"1000px\",\n        margin: \"20px auto 0 auto\"\n    }\n}));\n\nfunction Home() {\n    const classes = useStyles();\n    return (\n        <div>\n            <Box className={classes.container} display=\"flex\">\n                <Box flex={1}>\n                    <img \n                    src={logo}\n                    alt=\"logo\"\n                    className={classes.logo}\n                    />\n                </Box>\n                <Tooltip title=\"Github\" placement=\"left\">\n                    <Button\n                    href=\"https://github.com/shintaro-hirose?tab=repositories\" \n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{color: \"white\"}}\n                    >\n                        <GitHubIcon\n                        />\n                    </Button>\n                </Tooltip>\n            </Box>\n            <Typography className={classes.title}>\n                My Projects\n            </Typography>\n            <hr size=\"2\" color=\"#62DAFB\"></hr>\n            <Box className={classes.container}>\n                <Grid container spacing={10}>\n                    <Grid item sm={4} xs={12}>\n                        <WorkCard \n                        summaryContent={workContents[0]}\n                        />\n                    </Grid>\n                    <Grid item sm={4} xs={12}>\n                        <WorkCard \n                        summaryContent={workContents[1]}\n                        />\n                    </Grid>\n                    <Grid item sm={4} xs={12}>\n                        <WorkCard\n                        summaryContent={workContents[2]}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={10}>\n                    <Grid item sm={4} xs={12}>\n                        <WorkCard \n                        summaryContent={workContents[3]}\n                        />\n                    </Grid>\n                    <Grid item sm={4} xs={12}>\n                        <WorkCard \n                        summaryContent={workContents[4]}\n                        />\n                    </Grid>\n                    {/* <Grid item sm={4} xs={12}>\n                        <WorkCard\n                        summaryContent={{\n                            summaryImage: image3,\n                            workTitle: \"React Number Guess\"\n                        }}\n                        />\n                    </Grid> */}\n                </Grid>\n            </Box>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport './App.css';\n//pages\nimport Home from './pages/Home'\n//theming\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#60d9fb\"\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Home />\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}